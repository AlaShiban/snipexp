[
   {
      "author":"Coding4Fun",
      "desc":"Add an image file to the clipboard",
      "title":"Add Bitmap to clipboard",
      "code":"//create datapackage\nvar dataPackage = new Windows.ApplicationModel.DataTransfer.DataPackage();\ndataPackage.setBitmap(Windows.Storage.Streams.RandomAccessStreamReference.createFromFile($imageFile$));\n\n// add to clipboard\nWindows.ApplicationModel.DataTransfer.Clipboard.setContent(dataPackage);",
      "lang":"JavaScript",
      "filename":"AddBitmap.snippet",
      "keywords":[
         "Add",
         "an",
         "image",
         "file",
         "to",
         "the",
         "clipboard",
         "Bitmap",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add a new command to the settings pane",
      "title":"Add Command to settings",
      "code":"Windows.UI.ApplicationSettings.SettingsPane.getForCurrentView().addEventListener(\"commandsrequested\",function(eventargs)\n{\n    var command = new Windows.UI.ApplicationSettings.SettingsCommand(\"$generalSettings$\", \"$General$\", $GeneralSettingsHandler$);\n    eventargs.request.applicationCommands.append(command);\n});",
      "lang":"JavaScript",
      "filename":"AddCommand.snippet",
      "keywords":[
         "Add",
         "a",
         "new",
         "command",
         "to",
         "the",
         "settings",
         "pane",
         "Command",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add an html snippet to the clipboard",
      "title":"Add Html to clipboard",
      "code":"// create datapackage\nvar dataPackage = new Windows.ApplicationModel.DataTransfer.DataPackage();\ndataPackage.setHtmlFormat(\"<span>Hello world</span>\");\n\n// add to clipboard\nWindows.ApplicationModel.DataTransfer.Clipboard.setContent(dataPackage);",
      "lang":"JavaScript",
      "filename":"AddHtml.snippet",
      "keywords":[
         "Add",
         "an",
         "html",
         "snippet",
         "to",
         "the",
         "clipboard",
         "Html",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add an Rtf snippet to the clip board",
      "title":"Add Rtf to clipboard",
      "code":"// create datapackage\nvar dataPackage = new Windows.ApplicationModel.DataTransfer.DataPackage();\ndataPackage.setRtf(\"Hello world\");\n\n// add to clipboard\nWindows.ApplicationModel.DataTransfer.Clipboard.setContent(dataPackage);",
      "lang":"JavaScript",
      "filename":"AddRtf.snippet",
      "keywords":[
         "Add",
         "an",
         "Rtf",
         "snippet",
         "to",
         "the",
         "clip",
         "board",
         "clipboard",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add text to the clipboard",
      "title":"Add Text to clipboard",
      "code":"// create datapackage\nvar dataPackage = new DataPackage();\ndataPackage.SetText(\"Hello world\");\n\n// add to clipboard\nClipboard.SetContent(dataPackage);",
      "lang":"JavaScript",
      "filename":"AddText.snippet",
      "keywords":[
         "Add",
         "text",
         "to",
         "the",
         "clipboard",
         "Text",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add an URI to the clipboard",
      "title":"Add URI to clipboard",
      "code":"// create datapackage\nvar dataPackage = new Windows.ApplicationModel.DataTransfer.DataPackage();\ndataPackage.setUri(new Windows.Foundation.Uri(\"http://www.microsoft.com\"));\n\n// add to clipboard\nWindows.ApplicationModel.DataTransfer.Clipboard.setContent(dataPackage);",
      "lang":"JavaScript",
      "filename":"AddUri.snippet",
      "keywords":[
         "Add",
         "an",
         "URI",
         "to",
         "the",
         "clipboard",
         "JavaScript"
      ]
   },
   {
      "author":"Adrian is fun!",
      "desc":"Adjust the UI for different form factors",
      "title":"Adjust the UI for different form factors",
      "code":"// Adjust the UI for different form factors\nmyapp.$MyScreen$.FieldToHide_postRender = function (element, contentItem) {\n    $$(element).addClass(\"hidden-on-phone\");\n};\n// Add the following to the @media section of the user-customizations.css file.\n// .hidden-on-phone {\n//     display: none;\n// }",
      "lang":"JavaScript",
      "filename":"Adjust%20the%20UI%20for%20different%20form%20factors.snippet",
      "keywords":[
         "Adjust",
         "the",
         "UI",
         "for",
         "different",
         "form",
         "factors",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Download a file in the background with BackgroundDownloader",
      "title":"Background Download",
      "code":"var downloader = new Windows.Networking.BackgroundTransfer.BackgroundDownloader();\ndownloader.createDownload($uri$, $file$);",
      "lang":"JavaScript",
      "filename":"BackgroundDownload.snippet",
      "keywords":[
         "Download",
         "a",
         "file",
         "in",
         "the",
         "background",
         "with",
         "BackgroundDownloader",
         "Background",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Upload a file in the background with BackgroundUploader",
      "title":"Background Upload",
      "code":"var uploader = new Windows.Networking.BackgroundTransfer.BackgroundUploader();\nuploader.createUpload($uri$, $file$);",
      "lang":"JavaScript",
      "filename":"BackgroundUpload.snippet",
      "keywords":[
         "Upload",
         "a",
         "file",
         "in",
         "the",
         "background",
         "with",
         "BackgroundUploader",
         "Background",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Decode a buffer to a Base64 string",
      "title":"Base64 Decode",
      "code":"var buffer = Windows.Security.Cryptography.CryptographicBuffer.decodeFromBase64String($string$);",
      "lang":"JavaScript",
      "filename":"Base64Decode.snippet",
      "keywords":[
         "Decode",
         "a",
         "buffer",
         "to",
         "Base64",
         "string",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Encode a buffer to a Base64 string",
      "title":"Base64 Encode",
      "code":"var b64string = Windows.Security.Cryptography.CryptographicBuffer.encodeToBase64String($buffer$);",
      "lang":"JavaScript",
      "filename":"Base64Encode.snippet",
      "keywords":[
         "Encode",
         "a",
         "buffer",
         "to",
         "Base64",
         "string",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Capture a photo using the Camera UI",
      "title":"Capture Photo",
      "code":"var dialog = new Windows.Media.Capture.CameraCaptureUI();\ndialog.captureFileAsync(Windows.Media.Capture.CameraCaptureUIMode.Photo).done(function (file) {\n});",
      "lang":"JavaScript",
      "filename":"CapturePhoto.snippet",
      "keywords":[
         "Capture",
         "a",
         "photo",
         "using",
         "the",
         "Camera",
         "UI",
         "Photo",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Capture a video using the Camera UI",
      "title":"Capture Video",
      "code":"var dialog = new Windows.Media.Capture.CameraCaptureUI();\ndialog.captureFileAsync(Windows.Media.Capture.CameraCaptureUIMode.Video).done(function (file) {\n});",
      "lang":"JavaScript",
      "filename":"CaptureVideo.snippet",
      "keywords":[
         "Capture",
         "a",
         "video",
         "using",
         "the",
         "Camera",
         "UI",
         "Video",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Respond to the right click gesture",
      "title":"Right Click Context Menu",
      "code":"document.addEventListener(\"contextmenu\", function(){\n\n});",
      "lang":"JavaScript",
      "filename":"ContextMenuRightClick.snippet",
      "keywords":[
         "Respond",
         "to",
         "the",
         "right",
         "click",
         "gesture",
         "Right",
         "Click",
         "Context",
         "Menu",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Copy a StorageFile to a StorageFolder",
      "title":"Copy File",
      "code":"$source$.copyAsync($dir$, \"$name$\").done(function (destFile) {\n});;",
      "lang":"JavaScript",
      "filename":"CopyFile.snippet",
      "keywords":[
         "Copy",
         "a",
         "StorageFile",
         "to",
         "StorageFolder",
         "File",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Create a custom modal picker by using a popup",
      "title":"Create a custom modal picker by using a popup",
      "code":"// Create a custom modal picker by using a popup\nmyapp.$MyScreen$.created = function (screen) {\n    screen.findContentItem(\"$Products$\").dataBind(\"value.selectedItem\", function (newValue) {\n        if (newValue !== undefined && newValue !== null) {\n            //Whenever selectedItem for $Products$ changes, update the Product value on the main page \n            screen.Order_Detail.setProduct(screen.$Products$.selectedItem);\n\n            //Close popup, if one is up. \n            screen.closePopup();\n        }\n    });\n};",
      "lang":"javascript",
      "filename":"Create%20a%20custom%20modal%20picker%20by%20using%20a%20popup.snippet",
      "keywords":[
         "Create",
         "a",
         "custom",
         "modal",
         "picker",
         "by",
         "using",
         "popup",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Create a StorageFile in a specified StorageFolder",
      "title":"Create File",
      "code":"$dir$.createFileAsync(\"$file$\").done(function (file) {\n});",
      "lang":"JavaScript",
      "filename":"CreateFile.snippet",
      "keywords":[
         "Create",
         "a",
         "StorageFile",
         "in",
         "specified",
         "StorageFolder",
         "File",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Create a StorageFolder in a specified StorageFolder",
      "title":"Create Folder",
      "code":"$src$.createFolderAsync(\"$name$\").done(function (newFolder) {\n});",
      "lang":"JavaScript",
      "filename":"CreateFolder.snippet",
      "keywords":[
         "Create",
         "a",
         "StorageFolder",
         "in",
         "specified",
         "Folder",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Customize a FlipSwitch Control",
      "title":"Customize a FlipSwitch Control",
      "code":"// Customize a FlipSwitch control\nmyapp.$MyScreen$.MyFlipSwitch_render = function (element, contentItem) {\n    createBooleanSwitch(element, contentItem);\n};\n\nfunction createBooleanSwitch(element, contentItem) {\n    var $$flipSwitch = $$('<select data-role=\"slider\"></select>').appendTo($$(element));\n    $$('<option value=\"false\">false</option>').appendTo($$flipSwitch);\n    $$('<option value=\"true\">true</option>').appendTo($$flipSwitch);\n\n    // set select value to match the original contentItem.value\n    $$flipSwitch.val((contentItem.value) ? \"true\" : \"false\");\n\n    // add listener to update contentItem's value if slider changes\n    $$flipSwitch.change(function () {\n        contentItem.value = ($$flipSwitch.val() == \"true\");\n    });\n\n    // visually refresh the slider.\n    $$flipSwitch.slider().slider(\"refresh\");\n};",
      "lang":"javascript",
      "filename":"Customize%20a%20FlipSwitch%20Control.snippet",
      "keywords":[
         "Customize",
         "a",
         "FlipSwitch",
         "Control",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Customize the Save command to save to multiple data sources",
      "title":"Customize the Save command to save to multiple data sources",
      "code":"// Customize the Save command to save to multiple data sources\nmyapp.onsavechanges = function (e) {\n\n    var promises = [];\n\n    promises.push(myapp.activeDataWorkspace.$NorthwindData$.saveChanges());\n\n    promises.push(myapp.activeDataWorkspace.ApplicationData.saveChanges());\n\n    e.detail.promise = WinJS.Promise.join(promises);\n\n};",
      "lang":"javascript",
      "filename":"Customize%20the%20Save%20command%20for%20multiple%20sources.snippet",
      "keywords":[
         "Customize",
         "the",
         "Save",
         "command",
         "to",
         "save",
         "multiple",
         "data",
         "sources",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Delete selected item on a screen or popup",
      "title":"Delete selected item on a screen or popup",
      "code":"// Delete the selected item on a screen or popup\nmyapp.$MyScreen$.MyButton_execute = function (screen) {\n    screen.getCustomers().then(function ($customers$) {\n        $customers$.deleteSelected();\n    });\n};",
      "lang":"javascript",
      "filename":"Delete%20selected%20item%20on%20a%20screen%20or%20popup.snippet",
      "keywords":[
         "Delete",
         "selected",
         "item",
         "on",
         "a",
         "screen",
         "or",
         "popup",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Delete a StorageFile",
      "title":"Delete File",
      "code":"$file$.deleteAsync().done(function () {\n});",
      "lang":"JavaScript",
      "filename":"DeleteFile.snippet",
      "keywords":[
         "Delete",
         "a",
         "StorageFile",
         "File",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Display a location on a map",
      "title":"Display a location on a map",
      "code":"// Display a location on a map\n\n/// <reference path=\"jquery-1.7.1.js\" />\n/// <reference path=\"jquery.mobile-1.1.1.js\" />\n/// <reference path=\"msls-1.0.0.js\" />\n\n(function ($$) {\n    var _credentialsKey = \"$YOURBINGMAPSKEY$\";\n\n    // load the directions module only once per session\n    Microsoft.Maps.loadModule('Microsoft.Maps.Directions');\n\n    $$.widget(\"msls.lightswitchBingMapsControl\", {\n        options: {\n            mapType: Microsoft.Maps.MapTypeId.road,\n            zoom: 3,\n            showDashboard: false\n        },\n\n        _create: function () {\n        },\n\n        _init: function () {\n            this.createMap();\n        },\n\n        destroy: function () {\n            this._destroyBingMapsControl();\n        },\n\n        createMap: function () {\n            this.htmlMapElement = this.element[0];\n\n            // create empty map\n            this.map = new Microsoft.Maps.Map(this.htmlMapElement,\n                                {\n                                    credentials: _credentialsKey,\n                                    mapTypeId: this.options.mapType,\n                                    zoom: this.options.zoom,\n                                    showDashboard: this.options.showDashboard\n                                });\n        },\n\n        addPinAsync: function (street, city, country, i, callback) {\n\n            var widgetInstance = this;\n\n            // construct a request to the REST geocode service using the widget's\n            // optional parameters\n            var geocodeRequest = \"http://dev.virtualearth.net/REST/v1/Locations/\" +\n                                 street + \",\" + city + \",\" + country +\n                                 \"?key=\" + _credentialsKey;\n\n            // make the ajax request to the Bing Maps geocode REST service\n            $$.ajax({\n                url: geocodeRequest,\n                dataType: 'jsonp',\n                async: true,\n                jsonp: 'jsonp',\n                error: function (XMLHttpRequest, textStatus, errorThrown) {\n                    alert(textStatus + \" \" + errorThrown);\n                },\n                success: function (result) {\n                    var coordinates = null;\n\n                    if (result && result.resourceSets && (result.resourceSets.length > 0) &&\n                        result.resourceSets[0].resources && (result.resourceSets[0].resources.length > 0)) {\n\n                        // create a location based on the geocoded coordinates\n                        coordinates = result.resourceSets[0].resources[0].point.coordinates;\n\n                        widgetInstance._createPinFromCoordinates(coordinates, i, callback);\n                    }\n                }\n            });\n        },\n\n        _createPinFromCoordinates: function (coordinates, i, callback) {\n            var location = new Microsoft.Maps.Location(coordinates[0], coordinates[1]);\n            var pin = new Microsoft.Maps.Pushpin(location, { text: '' + i + '' });\n            Microsoft.Maps.Events.addHandler(pin, 'click', callback);\n            this.map.entities.push(pin);\n        },\n\n        resetMap: function () {\n            this.map.entities.clear();\n        },\n\n        _handleError: function (error) {\n            alert(\"An error occurred.  \" + error.message);\n        },\n\n        _destroyBingMapsControl: function () {\n            if (this.map != null) {\n                this.map.dispose();\n                this.map = null;\n            }\n        }\n    });\n}(jQuery));\n\n/// <reference path=\"../GeneratedArtifacts/viewModel.js\" />\n\nvar mapDiv;\nvar current = 0;\nvar step = 15;\n\nmyapp.BrowseCustomers.Customer_render = function (element, contentItem) {\n    mapDiv = $$('<div />').appendTo($$(element));\n    $$(mapDiv).lightswitchBingMapsControl();\n\n    var visualCollection = contentItem.value;\n    if (visualCollection.isLoaded) {\n        showItems(current, step, contentItem.screen);\n    } else {\n        visualCollection.addChangeListener(\"isLoaded\", function () {\n            showItems(current, step, contentItem.screen);\n        });\n        visualCollection.load();\n    }\n};\n\nfunction showItems(start, end, screen) {\n    $$(mapDiv).lightswitchBingMapsControl(\"resetMap\");\n\n    $$.each(screen.Customers.data, function (i, customer) {\n        if (i >= start && i <= end) {\n            $$(mapDiv).lightswitchBingMapsControl(\"addPinAsync\", customer.Address,\n                customer.City, customer.Country, i + 1, function () {\n                    screen.Customers.selectedItem = customer;\n                    screen.showPopup(\"Details\");\n                });\n        }\n    });\n};\n// Add the following to the default.htm file:\n// <script type=\"text/javascript\" charset=\"utf­8\" src=\"http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0\"></script>\n// <script type=\"text/javascript\" charset=\"utf­8\" src=\"Scripts/lightswitch.bing-maps.js\"></script>",
      "lang":"javascript",
      "filename":"Display%20a%20location%20on%20a%20map.snippet",
      "keywords":[
         "Display",
         "a",
         "location",
         "on",
         "map",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Display a title on a popup",
      "title":"Display a title on a popup",
      "code":"// Display a title on a popup\nmyapp.$MyScreen$.LocalProperty_postRender = function (element, contentItem) {\n    element.textContent = \"This is the title\";\n    $$(element).css(\"font-size\", \"23px\");\n    $$(element).css(\"font-weight\", \"bold\");\n};",
      "lang":"javascript",
      "filename":"Display%20a%20title%20on%20a%20popup.snippet",
      "keywords":[
         "Display",
         "a",
         "title",
         "on",
         "popup",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Download the contents of an AtomPub feed",
      "title":"Download AtomPub Feed",
      "code":"new Windows.Web.AtomPub.AtomPubClient().retrieveFeedAsync(new Windows.Foundation.Uri(\"$uri$\")).then(function (feed) {\n});",
      "lang":"JavaScript",
      "filename":"DownloadAtomPub.snippet",
      "keywords":[
         "Download",
         "the",
         "contents",
         "of",
         "an",
         "AtomPub",
         "feed",
         "Feed",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Download the contents of an RSS feed",
      "title":"Download RSS Feed",
      "code":"new Windows.Web.Syndication.SyndicationClient().retrieveFeedAsync(new Windows.Foundation.Uri(\"$uri$\")).then(function (feed) {\n});",
      "lang":"JavaScript",
      "filename":"DownloadRSS.snippet",
      "keywords":[
         "Download",
         "the",
         "contents",
         "of",
         "an",
         "RSS",
         "feed",
         "Feed",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Download the contents of a specified Uri",
      "title":"Download Uri",
      "code":"string result = await new System.Net.Http.HttpClient().GetStringAsync(\"$uri$\");",
      "lang":"csharp",
      "filename":"DownloadUri.snippet",
      "keywords":[
         "Download",
         "the",
         "contents",
         "of",
         "a",
         "specified",
         "Uri",
         "csharp"
      ]
   },
   {
      "author":"Dr. WPF",
      "desc":"Dependency property.",
      "title":"0 -- Dependency Property -- default value",
      "code":"#region $property$\n\n        /// <summary>\n        /// $property$ Dependency Property\n        /// </summary>\n        public static readonly DependencyProperty $property$Property =\n            DependencyProperty.Register(\"$property$\", typeof($type$), typeof($ownerclass$),\n                new $metadataType$PropertyMetadata(($type$)$defaultvalue$));\n\n        /// <summary>\n        /// Gets or sets the $property$ property.  This dependency property \n        /// indicates $desc$.\n        /// </summary>\n        public $type$ $property$\n        {\n            get { return ($type$)GetValue($property$Property); }\n            set { SetValue($property$Property, value); }\n        }\n        \n        #endregion\n\n        $end$",
      "lang":"csharp",
      "filename":"DP.snippet",
      "keywords":[
         "Dependency",
         "property.",
         "0",
         "--",
         "Property",
         "default",
         "value",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Responsd to the edge gestures",
      "title":"Edge Gestures",
      "code":"Windows.UI.Input.EdgeGesture.getForCurrentView().addEventListener(\"canceled\", function () {\n});\n\nWindows.UI.Input.EdgeGesture.getForCurrentView().addEventListener(\"completed\", function () {\n});\n\nWindows.UI.Input.EdgeGesture.getForCurrentView().addEventListener(\"starting\", function () {\n});\n",
      "lang":"JavaScript",
      "filename":"EdgeEvents.snippet",
      "keywords":[
         "Responsd",
         "to",
         "the",
         "edge",
         "gestures",
         "Edge",
         "Gestures",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Enable or disable a button",
      "title":"Enable or disable a button",
      "code":"// Enable or disable a button\nmyapp.$MyScreen$.MyMethod_execute = function (screen) {\n    screen.findContentItem(\"$MyButton$\").isEnabled = false;\n};",
      "lang":"javascript",
      "filename":"Enable%20or%20disable%20a%20button.snippet",
      "keywords":[
         "Enable",
         "or",
         "disable",
         "a",
         "button",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"FileOpenPicker",
      "title":"FileOpenPicker",
      "code":"var picker = Windows.Storage.Pickers.FileOpenPicker();\npicker.fileTypeFilter.append([\"$ext$\"]);\n\npicker.pickSingleFileAsync().then(function (file) {\n});",
      "lang":"JavaScript",
      "filename":"FileOpenPicker.snippet",
      "keywords":[
         "FileOpenPicker",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"FileSavePicker",
      "title":"FileSavePicker",
      "code":"var picker = Windows.Storage.Pickers.FileSavePicker();\npicker.fileTypeChoices.insert(\"$desc$\", [\"$ext$\"]);\n\npicker.pickSaveFileAsync().then(function (file) {\n});",
      "lang":"JavaScript",
      "filename":"FileSavePicker.snippet",
      "keywords":[
         "FileSavePicker",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Format a number",
      "title":"FormatNumber",
      "code":"// Format a number\nmyapp.$MyScreen$.MyNumericField_postRender = function (element, contentItem) {\n    contentItem.dataBind(\"value\", function (value) {\n        if (value) {\n            $$(element).text(value.toFixed(2));\n        }\n    });\n};",
      "lang":"JavaScript",
      "filename":"Format%20a%20number.snippet",
      "keywords":[
         "Format",
         "a",
         "number",
         "FormatNumber",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"javascript: anonymous function",
      "code":"function () { $end$ }",
      "lang":"JavaScript",
      "filename":"func.snippet",
      "keywords":[
         "javascript:",
         "anonymous",
         "function",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Get the location of a device",
      "title":"Get the location of a device",
      "code":"// Get the location of a device\nmyapp.$MyScreen$.MyMethod_execute = function (screen) {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n            screen.MyLocation.latitude = pos.coords.latitude.toString();\n            screen.MyLocation.longitude = pos.coords.longitude.toString();\n        });\n    }\n    else {\n        alert(\"Geolocation not supported\");\n    }\n};",
      "lang":"javascript",
      "filename":"Get%20the%20location%20of%20a%20device.snippet",
      "keywords":[
         "Get",
         "the",
         "location",
         "of",
         "a",
         "device",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get current Geolocation",
      "title":"Get Geolocation",
      "code":"new Windows.Devices.Geolocation.Geolocator().getGeopositionAsync().done(function (position) {\n});",
      "lang":"JavaScript",
      "filename":"GetGeoPosition.snippet",
      "keywords":[
         "Get",
         "current",
         "Geolocation",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get LicenseInformation for the current application",
      "title":"Get License Information",
      "code":"var licenseInformation = Windows.ApplicationModel.Store.CurrentApp.licenseInformation;\nif (licenseInformation.isActive)\n{\n\tif (licenseInformation.isTrial)\n\t{\n\t\t// Trial mode - restrict functionality as appropriate\n\t}\n\telse\n\t{\n\t\t// Full mode - all all functionality as appropriate\n\t}\n}\nelse\n{\n}",
      "lang":"JavaScript",
      "filename":"GetLicenseInfo.snippet",
      "keywords":[
         "Get",
         "LicenseInformation",
         "for",
         "the",
         "current",
         "application",
         "License",
         "Information",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get ListingInformation for the current application",
      "title":"Get Listing Information",
      "code":"Windows.ApplicationModel.Store.CurrentApp.loadListingInformationAsync().done(function (listingInformation) {\n});",
      "lang":"JavaScript",
      "filename":"GetListingInfo.snippet",
      "keywords":[
         "Get",
         "ListingInformation",
         "for",
         "the",
         "current",
         "application",
         "Listing",
         "Information",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"GetTypeInfo with Reflection",
      "title":"GetTypeInfo",
      "code":"TypeInfo ti = typeof($type$).GetTypeInfo();",
      "lang":"csharp",
      "filename":"GetTypeInfo.snippet",
      "keywords":[
         "GetTypeInfo",
         "with",
         "Reflection",
         "csharp"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag and $(document).ready() shortcut",
      "code":"<script type=\"text/javascript\">\n    $$(function() {\n        $end$ \n    });\n</script>",
      "lang":"html",
      "filename":"jq.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "and",
         "$(document).ready()",
         "shortcut",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Insert content after each of the matched elements.",
      "code":"$$($selector$).after($content$);\n$end$",
      "lang":"JavaScript",
      "filename":"jqAfter.snippet",
      "keywords":[
         "jQuery:",
         "Insert",
         "content",
         "after",
         "each",
         "of",
         "the",
         "matched",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $.ajax() template",
      "code":"$$.ajax({\n    type: \"$method$\",\n    url: \"$url$\",\n    data: \"$data$\",\n    dataType: \"$dataType$\",\n    success: function(response) {\n        $end$\n    }\n});",
      "lang":"JavaScript",
      "filename":"jqAjax.snippet",
      "keywords":[
         "jQuery:",
         "$.ajax()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"Natalie Rocks",
      "desc":"Snippet suggested by Dave Ward (@Encosia). More info: http://encosia.com/2008/03/27/using-jquery-to-consume-aspnet-json-web-services/",
      "title":"jQuery: $.ajax() template for calling ASP.NET WebService/PageMethod",
      "code":"$$.ajax({\n\ttype: \"POST\",\n\tcontentType: \"application/json; charset=utf-8\",\n\tdataType: \"$dataType$\",\n\turl: \"$url$\",\n\tdata: \"$data$\",\n\tsuccess: function(response) {\n\t\t$end$\n\t}\n});",
      "lang":"JavaScript",
      "filename":"jqAjaxAspNetWebService.snippet",
      "keywords":[
         "Snippet",
         "suggested",
         "by",
         "Dave",
         "Ward",
         "(@Encosia).",
         "More",
         "info:",
         "http://encosia.com/2008/03/27/using-jquery-to-consume-aspnet-json-web-services/",
         "jQuery:",
         "$.ajax()",
         "template",
         "for",
         "calling",
         "ASP.NET",
         "WebService/PageMethod",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Append the content to the selected element(s)",
      "code":"$$($selector$).append($content$);$end$",
      "lang":"JavaScript",
      "filename":"jqAppend.snippet",
      "keywords":[
         "jQuery:",
         "Append",
         "the",
         "content",
         "to",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Append the content to the selected element(s)",
      "code":"$$($content$).appendTo($selector$);$end$",
      "lang":"JavaScript",
      "filename":"jqAppendTo.snippet",
      "keywords":[
         "jQuery:",
         "Append",
         "the",
         "content",
         "to",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Retrieve attribute value from element",
      "code":"$$($selector$).attr($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqAttrGet.snippet",
      "keywords":[
         "jQuery:",
         "Retrieve",
         "attribute",
         "value",
         "from",
         "element",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Remove attribute from element",
      "code":"$$($selector$).removeAttr($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqAttrRemove.snippet",
      "keywords":[
         "jQuery:",
         "Remove",
         "attribute",
         "from",
         "element",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set attribute value on element(s)",
      "code":"$$($selector$).attr($name$, $value$);$end$",
      "lang":"JavaScript",
      "filename":"jqAttrSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "attribute",
         "value",
         "on",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set attribute value on element(s) using function",
      "code":"$$($selector$).attr($name$, function (arrayIndex) { $end$ });$end$",
      "lang":"JavaScript",
      "filename":"jqAttrSetFn.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "attribute",
         "value",
         "on",
         "element(s)",
         "using",
         "function",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set attribute values on element(s) using object values",
      "code":"$$($selector$).attr({\n    $name$: $value$\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqAttrSetObj.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "attribute",
         "values",
         "on",
         "element(s)",
         "using",
         "object",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Insert content before each of the matched elements.",
      "code":"$$($selector$).before($content$);$end$",
      "lang":"JavaScript",
      "filename":"jqBefore.snippet",
      "keywords":[
         "jQuery:",
         "Insert",
         "content",
         "before",
         "each",
         "of",
         "the",
         "matched",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: bind(eventName, function)",
      "code":"$$($selector$).bind($eventName$, function(e){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqBind.snippet",
      "keywords":[
         "jQuery:",
         "bind(eventName,",
         "function)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: bind(eventName, data, function)",
      "code":"$$($selector$).bind($eventName$, $data$, function(e){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqBindWithData.snippet",
      "keywords":[
         "jQuery:",
         "bind(eventName,",
         "data,",
         "function)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: blur()",
      "code":"$$($selector$).blur(function (e) { \n    e.preventDefault();\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqBlur.snippet",
      "keywords":[
         "jQuery:",
         "blur()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: change()",
      "code":"$$($selector$).change(function (e) { \n    e.preventDefault();\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqChange.snippet",
      "keywords":[
         "jQuery:",
         "change()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Add a class to the selected elements",
      "code":"$$($selector$).addClass($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqClassAdd.snippet",
      "keywords":[
         "jQuery:",
         "Add",
         "a",
         "class",
         "to",
         "the",
         "selected",
         "elements",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Remove a class to the selected elements",
      "code":"$$($selector$).removeClass($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqClassRemove.snippet",
      "keywords":[
         "jQuery:",
         "Remove",
         "a",
         "class",
         "to",
         "the",
         "selected",
         "elements",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Toggle a class on the selected elements",
      "code":"$$($selector$).toggleClass($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqClassToggle.snippet",
      "keywords":[
         "jQuery:",
         "Toggle",
         "a",
         "class",
         "on",
         "the",
         "selected",
         "elements",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Toggle a class on the selected elements",
      "code":"$$($selector$).toggleClass($name$, $expression$); // toggle if expToEvaluate === true (v1.3+)$end$",
      "lang":"JavaScript",
      "filename":"jqClassToggleFn.snippet",
      "keywords":[
         "jQuery:",
         "Toggle",
         "a",
         "class",
         "on",
         "the",
         "selected",
         "elements",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: click()",
      "code":"$$($selector$).click(function (e) { \n    e.preventDefault();\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqClick.snippet",
      "keywords":[
         "jQuery:",
         "click()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Clone matched DOM Elements and select the clones.",
      "code":"$$($selector$).clone();$end$",
      "lang":"JavaScript",
      "filename":"jqClone.snippet",
      "keywords":[
         "jQuery:",
         "Clone",
         "matched",
         "DOM",
         "Elements",
         "and",
         "select",
         "the",
         "clones.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Clone matched DOM Elements, and all their event handlers, and select the clones.",
      "code":"$$($selector$).clone(true);$end$",
      "lang":"JavaScript",
      "filename":"jqCloneWithEvents.snippet",
      "keywords":[
         "jQuery:",
         "Clone",
         "matched",
         "DOM",
         "Elements,",
         "and",
         "all",
         "their",
         "event",
         "handlers,",
         "select",
         "the",
         "clones.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Return a style property on the first matched element.",
      "code":"$$($selector$).css($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqCssGet.snippet",
      "keywords":[
         "jQuery:",
         "Return",
         "a",
         "style",
         "property",
         "on",
         "the",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set a single style property to a value on all matched elements.",
      "code":"$$($selector$).css($name$, $value$);$end$",
      "lang":"JavaScript",
      "filename":"jqCssSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "a",
         "single",
         "style",
         "property",
         "to",
         "value",
         "on",
         "all",
         "matched",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set a key/value object as style properties to all matched elements.",
      "code":"\n$$($selector$).css({\n    $name$: $value$\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqCssSetObj.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "a",
         "key/value",
         "object",
         "as",
         "style",
         "properties",
         "to",
         "all",
         "matched",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Retrieve data value from element",
      "code":"$$($selector$).data($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqDataGet.snippet",
      "keywords":[
         "jQuery:",
         "Retrieve",
         "data",
         "value",
         "from",
         "element",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Remove data value from element",
      "code":"$$($selector$).removeData($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqDataRemove.snippet",
      "keywords":[
         "jQuery:",
         "Remove",
         "data",
         "value",
         "from",
         "element",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set data value on element(s)",
      "code":"$$($selector$).data($name$, $value$);$end$",
      "lang":"JavaScript",
      "filename":"jqDataSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "data",
         "value",
         "on",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: die(eventName)",
      "code":"$$($selector$).die($eventName$);$end$",
      "lang":"JavaScript",
      "filename":"jqDie.snippet",
      "keywords":[
         "jQuery:",
         "die(eventName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: die()",
      "code":"$$($selector$).die();$end$",
      "lang":"JavaScript",
      "filename":"jqDieAll.snippet",
      "keywords":[
         "jQuery:",
         "die()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: die(functionName)",
      "code":"$$($selector$).die($functionName$);$end$",
      "lang":"JavaScript",
      "filename":"jqDieFn.snippet",
      "keywords":[
         "jQuery:",
         "die(functionName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $(document).ready()",
      "code":"\n$$(document).ready(function() {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqDocReady.snippet",
      "keywords":[
         "jQuery:",
         "$(document).ready()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $(document).ready() shortcut",
      "code":"\n$$(function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqDocReadyShort.snippet",
      "keywords":[
         "jQuery:",
         "$(document).ready()",
         "shortcut",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $(selector).each() template",
      "code":"\n$$($selector$).each(function (index, domEle) {\n    // domEle == this\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqEachElement.snippet",
      "keywords":[
         "jQuery:",
         "$(selector).each()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Remove all child nodes from the set of matched elements.",
      "code":"$$($selector$).empty();$end$",
      "lang":"JavaScript",
      "filename":"jqEmpty.snippet",
      "keywords":[
         "jQuery:",
         "Remove",
         "all",
         "child",
         "nodes",
         "from",
         "the",
         "set",
         "of",
         "matched",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeIn()",
      "code":"$$($selector$).fadeIn();$end$",
      "lang":"JavaScript",
      "filename":"jqFadeIn.snippet",
      "keywords":[
         "Effects:",
         "fadeIn()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeIn(speed, callback)",
      "code":"$$($selector$).fadeIn($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqFadeInFull.snippet",
      "keywords":[
         "Effects:",
         "fadeIn(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeOut()",
      "code":"$$($selector$).fadeOut();$end$",
      "lang":"JavaScript",
      "filename":"jqFadeOut.snippet",
      "keywords":[
         "Effects:",
         "fadeOut()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeOut(speed, callback)",
      "code":"$$($selector$).fadeOut($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqFadeOutFull.snippet",
      "keywords":[
         "Effects:",
         "fadeOut(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeTo(speed, opacity)",
      "code":"$$($selector$).fadeTo($speed$, $opacity$);$end$",
      "lang":"JavaScript",
      "filename":"jqFadeTo.snippet",
      "keywords":[
         "Effects:",
         "fadeTo(speed,",
         "opacity)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: fadeTo(speed, opacity, callback)",
      "code":"$$($selector$).fadeTo($speed$, $opacity$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqFadeToFull.snippet",
      "keywords":[
         "Effects:",
         "fadeTo(speed,",
         "opacity,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"Kyle Spearrin (www.kylespearrin.com)",
      "desc":null,
      "title":"jQuery: Get (find) the descendants of each element in the current set of matched elements",
      "code":"$$($selector$).find($element$);$end$",
      "lang":"JavaScript",
      "filename":"jqFind.snippet",
      "keywords":[
         "jQuery:",
         "Get",
         "(find)",
         "the",
         "descendants",
         "of",
         "each",
         "element",
         "in",
         "current",
         "set",
         "matched",
         "elements",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: focus()",
      "code":"\n$$($selector$).focus(function (e) { \n    e.preventDefault();\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqFocus.snippet",
      "keywords":[
         "jQuery:",
         "focus()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $.get() template",
      "code":"\n$$.get(\"$url$\", $data$,\n    function(data, status) {\n        $end$\n    },\n    \"$responseFormat$\"\n);",
      "lang":"JavaScript",
      "filename":"jqGet.snippet",
      "keywords":[
         "jQuery:",
         "$.get()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $.getJSON() template",
      "code":"\n$$.getJSON(\"$url$\", $data$,\n    function(data) {\n        $end$\n    }\n);",
      "lang":"JavaScript",
      "filename":"jqGetJson.snippet",
      "keywords":[
         "jQuery:",
         "$.getJSON()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $.getScript() template",
      "code":"\n$$.getScript(\"$url$\", function(){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqGetScript.snippet",
      "keywords":[
         "jQuery:",
         "$.getScript()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Check if selected elements contain class",
      "code":"var $name$HasClass = $$($selector$).hasClass($name$);$end$",
      "lang":"JavaScript",
      "filename":"jqHasClass.snippet",
      "keywords":[
         "jQuery:",
         "Check",
         "if",
         "selected",
         "elements",
         "contain",
         "class",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the height of the first matched element.",
      "code":"$$($selector$).height();$end$",
      "lang":"JavaScript",
      "filename":"jqHeightGet.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "height",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Sets the height of the first matched element.",
      "code":"$$($selector$).height($val$);$end$",
      "lang":"JavaScript",
      "filename":"jqHeightSet.snippet",
      "keywords":[
         "jQuery:",
         "Sets",
         "the",
         "height",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: hide()",
      "code":"$$($selector$).hide();$end$",
      "lang":"JavaScript",
      "filename":"jqHide.snippet",
      "keywords":[
         "Effects:",
         "hide()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: hide(speed, callback)",
      "code":"$$($selector$).hide($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqHideFull.snippet",
      "keywords":[
         "Effects:",
         "hide(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: hover()",
      "code":"\n$$($selector$).hover(\n    function () {\n        // over\n        $end$\n    },\n    function () {\n        // out\n    }\n);",
      "lang":"JavaScript",
      "filename":"jqHover.snippet",
      "keywords":[
         "jQuery:",
         "hover()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Retrieve HTML content from element(s)",
      "code":"$$($selector$).html();$end$",
      "lang":"JavaScript",
      "filename":"jqHtmlGet.snippet",
      "keywords":[
         "jQuery:",
         "Retrieve",
         "HTML",
         "content",
         "from",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set the HTML content for selected element(s)",
      "code":"$$($selector$).html($html$);$end$",
      "lang":"JavaScript",
      "filename":"jqHtmlSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "the",
         "HTML",
         "content",
         "for",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the inner height of the first matched element.",
      "code":"$$($selector$).innerHeight();$end$",
      "lang":"JavaScript",
      "filename":"jqInnerHeight.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "inner",
         "height",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the inner width of the first matched element.",
      "code":"$$($selector$).innerWidth();$end$",
      "lang":"JavaScript",
      "filename":"jqInnerWidth.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "inner",
         "width",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Insert all of the matched elements after another, specified, set of elements.",
      "code":"$$($content$).insertAfter($selector$);$end$",
      "lang":"JavaScript",
      "filename":"jqInsertAfter.snippet",
      "keywords":[
         "jQuery:",
         "Insert",
         "all",
         "of",
         "the",
         "matched",
         "elements",
         "after",
         "another,",
         "specified,",
         "set",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Insert all of the matched elements before another, specified, set of elements",
      "code":"$$($content$).insertBefore($selector$);$end$",
      "lang":"JavaScript",
      "filename":"jqInsertBefore.snippet",
      "keywords":[
         "jQuery:",
         "Insert",
         "all",
         "of",
         "the",
         "matched",
         "elements",
         "before",
         "another,",
         "specified,",
         "set",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: keydown()",
      "code":"\n$$($selector$).keydown(function (e) { \n    var which = e.which;\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqKeyDown.snippet",
      "keywords":[
         "jQuery:",
         "keydown()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: keypress()",
      "code":"\n$$($selector$).keypress(function (e) { \n    var which = e.which;\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqKeyPress.snippet",
      "keywords":[
         "jQuery:",
         "keypress()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: keyup()",
      "code":"\n$$($selector$).keyup(function (e) { \n    var which = e.which;\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqKeyUp.snippet",
      "keywords":[
         "jQuery:",
         "keyup()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: live(eventName, function)",
      "code":"\n$$($selector$).live($eventName$, function(e){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqLive.snippet",
      "keywords":[
         "jQuery:",
         "live(eventName,",
         "function)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Ajax: load() with GET",
      "code":"\n$$($selector$).load(\"$url$\", \"$data$\", function (text, status, request) {\n    this; // dom element\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqLoadGet.snippet",
      "keywords":[
         "jQuery:",
         "Ajax:",
         "load()",
         "with",
         "GET",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Ajax: load() with POST",
      "code":"\n$$($selector$).load(\"$url$\", \"$data$\", function (text, status, request) {\n    this; // dom element\n    $end$\n});\n",
      "lang":"JavaScript",
      "filename":"jqLoadPost.snippet",
      "keywords":[
         "jQuery:",
         "Ajax:",
         "load()",
         "with",
         "POST",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mousedown()",
      "code":"\n$$($selector$).mousedown(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseDown.snippet",
      "keywords":[
         "jQuery:",
         "mousedown()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mouseenter()",
      "code":"\n$$($selector$).mouseenter(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseEnter.snippet",
      "keywords":[
         "jQuery:",
         "mouseenter()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mouseleave()",
      "code":"\n$$($selector$).mouseleave(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseLeave.snippet",
      "keywords":[
         "jQuery:",
         "mouseleave()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mousemove()",
      "code":"\n$$($selector$).mousemove(function (e) { \n    // values: e.clientX, e.clientY, e.pageX, e.pageY\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseMove.snippet",
      "keywords":[
         "jQuery:",
         "mousemove()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mouseout()",
      "code":"\n$$($selector$).mouseout(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseOut.snippet",
      "keywords":[
         "jQuery:",
         "mouseout()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mouseover()",
      "code":"\n$$($selector$).mouseover(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseOver.snippet",
      "keywords":[
         "jQuery:",
         "mouseover()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: mouseup()",
      "code":"\n$$($selector$).mouseup(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqMouseUp.snippet",
      "keywords":[
         "jQuery:",
         "mouseup()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Get the current offset of the first matched element, in pixels, relative to the document.",
      "code":"\nvar offset = $$($selector$).offset();\nvar top = offset.top;\nvar left = offset.left;\n$end$",
      "lang":"JavaScript",
      "filename":"jqOffset.snippet",
      "keywords":[
         "jQuery:",
         "Get",
         "the",
         "current",
         "offset",
         "of",
         "first",
         "matched",
         "element,",
         "in",
         "pixels,",
         "relative",
         "to",
         "document.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Returns a jQuery collection with the positioned parent of the first matched element.",
      "code":"\nvar offset = $$($selector$).offsetParent();\nvar top = offset.top;\nvar left = offset.left;\n$end$",
      "lang":"JavaScript",
      "filename":"jqOffsetParent.snippet",
      "keywords":[
         "jQuery:",
         "Returns",
         "a",
         "jQuery",
         "collection",
         "with",
         "the",
         "positioned",
         "parent",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: one(eventName, function)",
      "code":"\n$$($selector$).one($eventName$, function(e){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqOne.snippet",
      "keywords":[
         "jQuery:",
         "one(eventName,",
         "function)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: one(eventName, data, function)",
      "code":"\n$$($selector$).one($eventName$, $data$, function(e){\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqOneWithData.snippet",
      "keywords":[
         "jQuery:",
         "one(eventName,",
         "data,",
         "function)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the outer height of the first matched element.",
      "code":"$$($selector$).outerHeight($includeMarginBool$);$end$",
      "lang":"JavaScript",
      "filename":"jqOuterHeight.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "outer",
         "height",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the outer width of the first matched element.",
      "code":"$$($selector$).outerWidth($includeMarginBool$);",
      "lang":"JavaScript",
      "filename":"jqOuterWidth.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "outer",
         "width",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: plugin template",
      "code":"\n(function($$) {\n \n   jQuery.fn.$pluginName$ = function(settings) {\n     var config = {'foo': 'bar'};\n \n     if (settings) jQuery.extend(config, settings);\n \n     this.each(function() {\n       // element-specific code here\n       $end$\n     });\n \n     return this;\n \n   };\n \n })(jQuery);\n",
      "lang":"JavaScript",
      "filename":"jqPlugin.snippet",
      "keywords":[
         "jQuery:",
         "plugin",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the top and left position of an element relative to its offset parent.",
      "code":"\nvar position = $$($selector$).position();\nvar top = position.top;\nvar left = position.left;\n$end$",
      "lang":"JavaScript",
      "filename":"jqPosition.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "top",
         "and",
         "left",
         "position",
         "of",
         "an",
         "element",
         "relative",
         "to",
         "its",
         "offset",
         "parent.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: $.post() template",
      "code":"\n$$.post(\"$url$\", $data$,\n    function(data, status) {\n        $end$\n    },\n    \"$responseFormat$\"\n);",
      "lang":"JavaScript",
      "filename":"jqPost.snippet",
      "keywords":[
         "jQuery:",
         "$.post()",
         "template",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Prepend the content to the selected element(s)",
      "code":"$$($selector$).prepend($content$);$end$",
      "lang":"JavaScript",
      "filename":"jqPrepend.snippet",
      "keywords":[
         "jQuery:",
         "Prepend",
         "the",
         "content",
         "to",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Prepend the content to the selected element(s)",
      "code":"$$($content$).prependTo($selector$);$end$",
      "lang":"JavaScript",
      "filename":"jqPrependTo.snippet",
      "keywords":[
         "jQuery:",
         "Prepend",
         "the",
         "content",
         "to",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Removes all matched elements from the DOM.",
      "code":"$$($selector$).remove();$end$",
      "lang":"JavaScript",
      "filename":"jqRemove.snippet",
      "keywords":[
         "jQuery:",
         "Removes",
         "all",
         "matched",
         "elements",
         "from",
         "the",
         "DOM.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Removes all matched elements from the DOM.",
      "code":"$$($selector$).remove($expression$);$end$",
      "lang":"JavaScript",
      "filename":"jqRemoveExp.snippet",
      "keywords":[
         "jQuery:",
         "Removes",
         "all",
         "matched",
         "elements",
         "from",
         "the",
         "DOM.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Replaces the elements matched by the specified selector with the matched elements.",
      "code":"$$($selector$).replaceAll($content$);$end$",
      "lang":"JavaScript",
      "filename":"jqReplaceAll.snippet",
      "keywords":[
         "jQuery:",
         "Replaces",
         "the",
         "elements",
         "matched",
         "by",
         "specified",
         "selector",
         "with",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Replaces all matched elements with the specified HTML or DOM elements.",
      "code":"$$($selector$).replaceWith($content$);$end$",
      "lang":"JavaScript",
      "filename":"jqReplaceWith.snippet",
      "keywords":[
         "jQuery:",
         "Replaces",
         "all",
         "matched",
         "elements",
         "with",
         "the",
         "specified",
         "HTML",
         "or",
         "DOM",
         "elements.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: resize()",
      "code":"\n$$($selector$).resize(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqResize.snippet",
      "keywords":[
         "jQuery:",
         "resize()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag with jQuery src",
      "code":"<script type=\"text/javascript\" src=\"$path$\"></script>\n$end$",
      "lang":"html",
      "filename":"jqScript.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "with",
         "jQuery",
         "src",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag using Google's CDN",
      "code":"<script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/$version$/jquery.min.js\"></script>\n$end$",
      "lang":"html",
      "filename":"jqScriptCdnGoogle.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "using",
         "Google's",
         "CDN",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag using Microsoft's CDN",
      "code":"<script type=\"text/javascript\" src=\"//ajax.aspnetcdn.com/ajax/jQuery/jquery-$version$.min.js\"></script>\n$end",
      "lang":"html",
      "filename":"jqScriptCdnMs.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "using",
         "Microsoft's",
         "CDN",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag and $(document).ready() shortcut",
      "code":"<script type=\"text/javascript\" src=\"$path$\">\n    $$(function() {\n        $end$ \n    });\n</script>",
      "lang":"html",
      "filename":"jqScriptMin.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "and",
         "$(document).ready()",
         "shortcut",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag for jQuery UI using Google's CDN",
      "code":"<script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jqueryui/$version$/jquery-ui.min.js\"></script>\n$end$",
      "lang":"html",
      "filename":"jqScriptUiCdnGoogle.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "for",
         "jQuery",
         "UI",
         "using",
         "Google's",
         "CDN",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: script tag for jQuery validation plugin using Microsoft's CDN",
      "code":"<script type=\"text/javascript\" src=\"//ajax.aspnetcdn.com/ajax/jquery.validate/$version$/jquery.validate.min.js\"></script>\n$end$",
      "lang":"html",
      "filename":"jqScriptValidateCdnMs.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "for",
         "jQuery",
         "validation",
         "plugin",
         "using",
         "Microsoft's",
         "CDN",
         "html"
      ]
   },
   {
      "author":"Kyle Spearrin (www.kylespearrin.com)",
      "desc":null,
      "title":"jQuery: script tag for jQuery unobtrusive validation plugin using Microsoft's CDN",
      "code":"<script type=\"text/javascript\" src=\"//ajax.aspnetcdn.com/ajax/mvc/3.0/jquery.validate.unobtrusive.min.js\"></script>\n$end$",
      "lang":"html",
      "filename":"jqScriptValidateUnobtrusiveCdnMs.snippet",
      "keywords":[
         "jQuery:",
         "script",
         "tag",
         "for",
         "jQuery",
         "unobtrusive",
         "validation",
         "plugin",
         "using",
         "Microsoft's",
         "CDN",
         "html"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: scroll()",
      "code":"\n$$($selector$).scroll(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqScroll.snippet",
      "keywords":[
         "jQuery:",
         "scroll()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the scroll left offset of the first matched element.",
      "code":"$$($selector$).scrollLeft();$end$",
      "lang":"JavaScript",
      "filename":"jqScrollLeftGet.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "scroll",
         "left",
         "offset",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Sets the scroll left offset of the first matched element.",
      "code":"$$($selector$).scrollLeft($val$);$end$",
      "lang":"JavaScript",
      "filename":"jqScrollLeftSet.snippet",
      "keywords":[
         "jQuery:",
         "Sets",
         "the",
         "scroll",
         "left",
         "offset",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the scroll top offset of the first matched element.",
      "code":"$$($selector$).scrollTop();$end$",
      "lang":"JavaScript",
      "filename":"jqScrollTopGet.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "scroll",
         "top",
         "offset",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Sets the scroll top offset of the first matched element.",
      "code":"$$($selector$).scrollTop($val$);$end$",
      "lang":"JavaScript",
      "filename":"jqScrollTopSet.snippet",
      "keywords":[
         "jQuery:",
         "Sets",
         "the",
         "scroll",
         "top",
         "offset",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: select()",
      "code":"\n$$($selector$).select(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqSelect.snippet",
      "keywords":[
         "jQuery:",
         "select()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: select() (trigger)",
      "code":"$$($selector$).select();$end$",
      "lang":"JavaScript",
      "filename":"jqSelectTrigger.snippet",
      "keywords":[
         "jQuery:",
         "select()",
         "(trigger)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: show()",
      "code":"$$($selector$).show();$end$",
      "lang":"JavaScript",
      "filename":"jqShow.snippet",
      "keywords":[
         "Effects:",
         "show()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: show(speed, callback)",
      "code":"$$($selector$).show($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqShowFull.snippet",
      "keywords":[
         "Effects:",
         "show(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: slideDown()",
      "code":"$$($selector$).slideDown();$end$",
      "lang":"JavaScript",
      "filename":"jqSlideDown.snippet",
      "keywords":[
         "Effects:",
         "slideDown()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: slideDown(speed, callback)",
      "code":"$$($selector$).slideDown($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqSlideDownFull.snippet",
      "keywords":[
         "Effects:",
         "slideDown(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: slideUp()",
      "code":"$$($selector$).slideUp();$end$",
      "lang":"JavaScript",
      "filename":"jqSlideUp.snippet",
      "keywords":[
         "Effects:",
         "slideUp()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: slideUp(speed, callback)",
      "code":"$$($selector$).slideUp($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqSlideUpFull.snippet",
      "keywords":[
         "Effects:",
         "slideUp(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: submit()",
      "code":"\n$$($selector$).submit(function (e) { \n    e.preventDefault();\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqSubmit.snippet",
      "keywords":[
         "jQuery:",
         "submit()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: submit() (trigger)",
      "code":"$$($selector$).submit();$end$",
      "lang":"JavaScript",
      "filename":"jqSubmitTrigger.snippet",
      "keywords":[
         "jQuery:",
         "submit()",
         "(trigger)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Retrieve text content from element(s)",
      "code":"$$($selector$).text();$end$",
      "lang":"JavaScript",
      "filename":"jqTextGet.snippet",
      "keywords":[
         "jQuery:",
         "Retrieve",
         "text",
         "content",
         "from",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set the text content for selected element(s)",
      "code":"$$($selector$).text($text$);$end$",
      "lang":"JavaScript",
      "filename":"jqTextSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "the",
         "text",
         "content",
         "for",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: toggle()",
      "code":"\n$$($selector$).toggle(\n    function () {\n        $end$\n    },\n    function () {\n    }\n);",
      "lang":"JavaScript",
      "filename":"jqToggle.snippet",
      "keywords":[
         "jQuery:",
         "toggle()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: toggle() (with more functions)",
      "code":"\n$$($selector$).toggle(\n    function () {\n        $end$\n    },\n    function () {\n    },\n    function () {\n    },\n    function () {\n    }\n);",
      "lang":"JavaScript",
      "filename":"jqToggleMore.snippet",
      "keywords":[
         "jQuery:",
         "toggle()",
         "(with",
         "more",
         "functions)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: toggle()",
      "code":"$$($selector$).toggle();$end$",
      "lang":"JavaScript",
      "filename":"jqToggleVis.snippet",
      "keywords":[
         "Effects:",
         "toggle()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: toggle(speed, callback)",
      "code":"$$($selector$).toggle($speed$, function () {\n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqToggleVisFull.snippet",
      "keywords":[
         "Effects:",
         "toggle(speed,",
         "callback)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"Effects: toggle(switch)",
      "code":"$$($selector$).toggle($switch$);$end$",
      "lang":"JavaScript",
      "filename":"jqToggleVisSwitch.snippet",
      "keywords":[
         "Effects:",
         "toggle(switch)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: trigger(eventName)",
      "code":"$$($selector$).trigger($eventName$);$end$",
      "lang":"JavaScript",
      "filename":"jqTrigger.snippet",
      "keywords":[
         "jQuery:",
         "trigger(eventName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: triggerHandler(eventName)",
      "code":"$$($selector$).triggerHandler($eventName$);$end$",
      "lang":"JavaScript",
      "filename":"jqTriggerHandler.snippet",
      "keywords":[
         "jQuery:",
         "triggerHandler(eventName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: triggerHandler(eventName, data)",
      "code":"$$($selector$).triggerHandler($eventName$, { $name$: $value$ });$end$",
      "lang":"JavaScript",
      "filename":"jqTriggerHandlerWithData.snippet",
      "keywords":[
         "jQuery:",
         "triggerHandler(eventName,",
         "data)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: trigger(eventName, data)",
      "code":"$$($selector$).trigger($eventName$, { $name$: $value$ });$end$",
      "lang":"JavaScript",
      "filename":"jqTriggerWithData.snippet",
      "keywords":[
         "jQuery:",
         "trigger(eventName,",
         "data)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: unbind(eventName)",
      "code":"$$($selector$).unbind($eventName$);$end$",
      "lang":"JavaScript",
      "filename":"jqUnbind.snippet",
      "keywords":[
         "jQuery:",
         "unbind(eventName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: unbind()",
      "code":"$$($selector$).unbind();$end$",
      "lang":"JavaScript",
      "filename":"jqUnbindAll.snippet",
      "keywords":[
         "jQuery:",
         "unbind()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: unbind(functionName)",
      "code":"$$($selector$).unbind($functionName$);$end$",
      "lang":"JavaScript",
      "filename":"jqUnbindFn.snippet",
      "keywords":[
         "jQuery:",
         "unbind(functionName)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: unload()",
      "code":"\n$$($selector$).unload(function () { \n    $end$\n});",
      "lang":"JavaScript",
      "filename":"jqUnload.snippet",
      "keywords":[
         "jQuery:",
         "unload()",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Retrieve value from element(s)",
      "code":"$$($selector$).val();$end$",
      "lang":"JavaScript",
      "filename":"jqValGet.snippet",
      "keywords":[
         "jQuery:",
         "Retrieve",
         "value",
         "from",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Set the value for selected element(s)",
      "code":"$$($selector$).val($val$);$end$",
      "lang":"JavaScript",
      "filename":"jqValSet.snippet",
      "keywords":[
         "jQuery:",
         "Set",
         "the",
         "value",
         "for",
         "selected",
         "element(s)",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Gets the width of the first matched element.",
      "code":"$$($selector$).width();$end$",
      "lang":"JavaScript",
      "filename":"jqWidthGet.snippet",
      "keywords":[
         "jQuery:",
         "Gets",
         "the",
         "width",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Sets the width of the first matched element.",
      "code":"$$($selector$).width($val$);$end$",
      "lang":"JavaScript",
      "filename":"jqWidthSet.snippet",
      "keywords":[
         "jQuery:",
         "Sets",
         "the",
         "width",
         "of",
         "first",
         "matched",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Wrap each matched element with the specified HTML content.",
      "code":"$$($selector$).wrap(<$tag$></$tag>);$end$",
      "lang":"JavaScript",
      "filename":"jqWrap.snippet",
      "keywords":[
         "jQuery:",
         "Wrap",
         "each",
         "matched",
         "element",
         "with",
         "the",
         "specified",
         "HTML",
         "content.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Wrap all the elements in the matched set into a single wrapper element.",
      "code":"$$($selector$).wrapAll(<$tag$></$tag>);$end$",
      "lang":"JavaScript",
      "filename":"jqWrapAll.snippet",
      "keywords":[
         "jQuery:",
         "Wrap",
         "all",
         "the",
         "elements",
         "in",
         "matched",
         "set",
         "into",
         "a",
         "single",
         "wrapper",
         "element.",
         "JavaScript"
      ]
   },
   {
      "author":"John Sheehan (@johnsheehan)",
      "desc":null,
      "title":"jQuery: Wrap the inner child contents of each matched element (including text nodes) with an HTML structure.",
      "code":"$$($selector$).wrapInner(<$tag$></$tag>);$end$",
      "lang":"JavaScript",
      "filename":"jqWrapInner.snippet",
      "keywords":[
         "jQuery:",
         "Wrap",
         "the",
         "inner",
         "child",
         "contents",
         "of",
         "each",
         "matched",
         "element",
         "(including",
         "text",
         "nodes)",
         "with",
         "an",
         "HTML",
         "structure.",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Parse a string of JSON data",
      "title":"JSON Parse",
      "code":"var array = window.JSON.parse(\"$jsonString$\");\narray.foreach(function (val) {\n});",
      "lang":"JavaScript",
      "filename":"JSONParse.snippet",
      "keywords":[
         "Parse",
         "a",
         "string",
         "of",
         "JSON",
         "data",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Show the default message dialog",
      "title":"Simple Message Dialog",
      "code":"// Create the message dialog and set its content\nvar messageDialog = new Windows.UI.Popups.MessageDialog(\"$msg$\");\n\n// Show the message dialog and wait\nmessageDialog.showAsync().then(function (result) {\n            \n});",
      "lang":"JavaScript",
      "filename":"MessageDialog1.snippet",
      "keywords":[
         "Show",
         "the",
         "default",
         "message",
         "dialog",
         "Simple",
         "Message",
         "Dialog",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Display a message dialog with 2 custom buttons",
      "title":"Custom button dialog",
      "code":"// Create the message dialog and set its content\nvar messageDialog = new Windows.UI.Popups.MessageDialog(\"$msg$\");\n\n// Add buttons and set their callback functions\nmessageDialog.commands.append( new Windows.UI.Popups.UICommand(\"$button1$\", function(command)\n        {\n        }));\nmessageDialog.commands.append( new Windows.UI.Popups.UICommand(\"$button2$\", function(command)\n        {\n        }));\n\n// Show the message dialog and wait\nmessageDialog.showAsync().then(function (result) {\n            \n});",
      "lang":"JavaScript",
      "filename":"MessageDialog2.snippet",
      "keywords":[
         "Display",
         "a",
         "message",
         "dialog",
         "with",
         "2",
         "custom",
         "buttons",
         "Custom",
         "button",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Show a message dialog with a default button",
      "title":"Message Dialog with default",
      "code":"// Create the message dialog and set its content\nvar messageDialog = new Windows.UI.Popups.MessageDialog(\"$msg$\");\n\n// Add buttons and set their callback functions\nmessageDialog.commands.append( new Windows.UI.Popups.UICommand(\"$button1$\", function(command)\n{\n}));\n\nmessageDialog.commands.append(new Windows.UI.Popups.UICommand(\"$button2$\", function (command) {\n}));\n\n// Set the command that will be invoked by default\nmessageDialog.defaultCommandIndex = 1;\n\n// Show the message dialog and wait\nmessageDialog.showAsync().then(function (result) {\n            \n});",
      "lang":"JavaScript",
      "filename":"MessageDialog3.snippet",
      "keywords":[
         "Show",
         "a",
         "message",
         "dialog",
         "with",
         "default",
         "button",
         "Message",
         "Dialog",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Display a dialog with a default cancel action.",
      "title":"Message Dialog with cancel action",
      "code":"// Create the message dialog and set its content\nvar messageDialog = new Windows.UI.Popups.MessageDialog(\"$msg$\");\n\n// Add buttons and set their callback functions\nmessageDialog.commands.append( new Windows.UI.Popups.UICommand(\"$button1$\", function(command)\n{\n}));\n\nmessageDialog.commands.append(new Windows.UI.Popups.UICommand(\"$button2$\", function (command) {\n}));\n\n// Set the command that will be invoked by default\nmessageDialog.cancelCommandIndex = 1;\n\n// Show the message dialog and wait\nmessageDialog.showAsync().then(function (result) {\n            \n});",
      "lang":"JavaScript",
      "filename":"MessageDialog4.snippet",
      "keywords":[
         "Display",
         "a",
         "dialog",
         "with",
         "default",
         "cancel",
         "action.",
         "Message",
         "Dialog",
         "action",
         "JavaScript"
      ]
   },
   {
      "author":null,
      "desc":null,
      "title":"NotifyObject: Use this to create a new NotifyObject, which holds the code needed to notify properties.",
      "code":"#region INotifyPropertyChanged values\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n\t\t\t\tprotected void RaisePropertyChanged(string propertyName)\n\t\t\t\t{\n\t\t\t\t\tvar handler = PropertyChanged;\n\t\t\t\t\tif(handler != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler(this, new PropertyChangedEventArgs(propertyName));\n\t\t\t\t\t}\n\t\t\t\t}        \n        #endregion\n        $end$",
      "lang":"csharp",
      "filename":"notifyo.snippet",
      "keywords":[
         "NotifyObject:",
         "Use",
         "this",
         "to",
         "create",
         "a",
         "new",
         "NotifyObject,",
         "which",
         "holds",
         "the",
         "code",
         "needed",
         "notify",
         "properties.",
         "csharp"
      ]
   },
   {
      "author":null,
      "desc":null,
      "title":"INotifyPropertyChanged Property: Use this to create a new property INotifyPropertyChanged implementation.",
      "code":"#region $publicProperty$ (INotifyPropertyChanged Property)\n\t\tprivate $type$ _$privateProperty$;\n\t\t\t\t\n\t\tpublic $type$ $publicProperty$ \n\t\t{\n\t\t\tget{ return _$privateProperty$;}\n\t\t\tset\n\t\t\t{\n\t\t\t\t_$privateProperty$ = value;\n\t\t\t\tRaisePropertyChanged(\"$publicProperty$\");\n\t\t\t}\n\t\t}\n\t\t#endregion\n        $end$",
      "lang":"csharp",
      "filename":"notifyp.snippet",
      "keywords":[
         "INotifyPropertyChanged",
         "Property:",
         "Use",
         "this",
         "to",
         "create",
         "a",
         "new",
         "property",
         "implementation.",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Parallel.For loop",
      "title":"Parallel.For",
      "code":"System.Threading.Tasks.Parallel.For($startIndex$, $endIndex$, (index) => \n{\n});",
      "lang":"csharp",
      "filename":"ParallelFor.snippet",
      "keywords":[
         "Parallel.For",
         "loop",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Parallel.ForEach loop",
      "title":"Parallel.ForEach",
      "code":"System.Threading.Tasks.Parallel.ForEach($list$, (item) =>\n{\n});",
      "lang":"csharp",
      "filename":"ParallelForEach.snippet",
      "keywords":[
         "Parallel.ForEach",
         "loop",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Find all peers with PeerFinder",
      "title":"Find peers with PeerFinder",
      "code":"Windows.Networking.Proximity.PeerFinder.findAllPeersAsync().then(function (peers) {\n});",
      "lang":"JavaScript",
      "filename":"PeerFinder.snippet",
      "keywords":[
         "Find",
         "all",
         "peers",
         "with",
         "PeerFinder",
         "JavaScript"
      ]
   },
   {
      "author":"Alex Fidanov",
      "desc":"Create a test class Person",
      "title":"Test Class Person",
      "code":"public class Person : global::System.ComponentModel.INotifyPropertyChanged\n    {\n        #region FirstName (INotifyPropertyChanged Property)\n        private string _firstName;\n\n        public string FirstName\n        {\n            get { return _firstName; }\n            set\n            {\n                _firstName = value;\n                RaisePropertyChanged(\"FirstName\");\n            }\n        }\n        #endregion\n        #region LastName (INotifyPropertyChanged Property)\n        private string _lastName;\n\n        public string LastName\n        {\n            get { return _lastName; }\n            set\n            {\n                _lastName = value;\n                RaisePropertyChanged(\"LastName\");\n            }\n        }\n        #endregion\n        #region Email (INotifyPropertyChanged Property)\n        private string _email;\n\n        public string Email\n        {\n            get { return _email; }\n            set\n            {\n                _email = value;\n                RaisePropertyChanged(\"Email\");\n            }\n        }\n        #endregion\n        #region Age (INotifyPropertyChanged Property)\n        private int _age;\n\n        public int Age\n        {\n            get { return _age; }\n            set\n            {\n                _age = value;\n                RaisePropertyChanged(\"Age\");\n            }\n        }\n        #endregion\n        #region BirthDay (INotifyPropertyChanged Property)\n        private DateTime _birthday;\n\n        public DateTime BirthDay\n        {\n            get { return _birthday; }\n            set\n            {\n                _birthday = value;\n                RaisePropertyChanged(\"BirthDay\");\n            }\n        }\n        #endregion\n        #region Gender (INotifyPropertyChanged Property)\n        private Genders _gender;\n\n        public Genders Gender\n        {\n            get { return _gender; }\n            set\n            {\n                _gender = value;\n                RaisePropertyChanged(\"Gender\");\n            }\n        }\n        #endregion\n        #region IsSuperhero (INotifyPropertyChanged Property)\n        private bool _isSuperhero;\n\n        public bool IsSuperhero\n        {\n            get { return _isSuperhero; }\n            set\n            {\n                _isSuperhero = value;\n                RaisePropertyChanged(\"IsSuperhero\");\n            }\n        }\n        #endregion\n        #region Interests (INotifyPropertyChanged Property)\n        private List<object> _interests;\n\n        public List<object> Interests\n        {\n            get { return _interests; }\n            set\n            {\n                _interests = value;\n                RaisePropertyChanged(\"Interests\");\n            }\n        }\n        #endregion\n\n        public static global::System.Collections.ObjectModel.ObservableCollection<Person> GetPeople()\n        {\n            global::System.Collections.ObjectModel.ObservableCollection<Person> source = new global::System.Collections.ObjectModel.ObservableCollection<Person>();\n\n            source.Add(new Person(\"Jack\", \"Sparrow\", 40, Genders.Male, false, new List<object>() { \"Pirate stuff\", \"Sparrows\", \"Pirate Ships\", \"Rum\", \"Funny Hats\" }));\n            source.Add(new Person(\"Hulk\", \"Hulk\", 35, Genders.Male, true, new List<object>() { \"Green\", \"Tanks\", \"Breaking stuff\" }));\n            source.Add(new Person(\"Cat\", \"Woman\", 24, Genders.Female, true, new List<object>() { \"Whiskas\", \"More Whiskas\" }));\n            source.Add(new Person(\"Frodo\", \"Baggins\", 20, Genders.Male, false, new List<object>() { \"Ring\", \"Ring\", \"Rings\" }));\n            source.Add(new Person(\"Luke\", \"Skywalker\", 28, Genders.Male, false, new List<object>() { \"Lightsabers\", \"Force\", \"Strong Force\", \"Jumping\" }));\n\n            return source;\n        }\n        public static global::System.Collections.ObjectModel.ObservableCollection<Person> GetPeople(int number)\n        {\n            global::System.Collections.ObjectModel.ObservableCollection<Person> source = new global::System.Collections.ObjectModel.ObservableCollection<Person>();\n\n            for (int i = 0; i < number; i++)\n            {\n                int age = new Random(i).Next(10, 70);\n                source.Add(new Person(RandomString(5), RandomString(7), age, age % 2 == 0 ? Genders.Male : Genders.Female));\n            }\n            return source;\n        }\n        public Person()\n        {\n            this.FirstName = \"New First Name\";\n            this.LastName = \"New Last Name\";\n            this.Age = 0;\n            this.Email = \"New Email Address\";\n            this.BirthDay = DateTime.Now;\n        }\n        public Person(string firstName, string lastName)\n        {\n            this.FirstName = firstName;\n            this.LastName = lastName;\n            this.Email = firstName[0] + lastName + \"@email.com\";\n        }\n        public Person(string firstName, string lastName, int age)\n        {\n            this.FirstName = firstName;\n            this.LastName = lastName;\n            this.Email = firstName[0] + lastName + \"@email.com\";\n            this.Age = age;\n            this.BirthDay = DateTime.Now.AddYears(-age).AddDays(new Random().Next(0, 100));\n        }\n        public Person(string firstName, string lastName, int age, Genders gender)\n        {\n            this.FirstName = firstName;\n            this.LastName = lastName;\n            this.Email = firstName[0] + lastName + \"@email.com\";\n            this.Age = age;\n            this.BirthDay = DateTime.Now.AddYears(-age).AddDays(new Random().Next(0, 100));\n            this.Gender = gender;\n        }\n        public Person(string firstName, string lastName, int age, Genders gender, bool isSuperhero, List<object> interests)\n        {\n            this.FirstName = firstName;\n            this.LastName = lastName;\n            this.Email = firstName[0] + lastName + \"@email.com\";\n            this.Age = age;\n            this.BirthDay = DateTime.Now.AddYears(-age).AddDays(new Random().Next(0, 100));\n            this.Gender = gender;\n            this.IsSuperhero = isSuperhero;\n            this.Interests = interests;\n        }\n        #region INotifyPropertyChanged values\n\n        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;\n\n        protected void RaisePropertyChanged(string propertyName)\n        {\n            var handler = PropertyChanged;\n            if (handler != null)\n            {\n                handler(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));\n            }\n        }\n        #endregion\n\n        public enum Genders\n        {\n            Male, Female\n        }\n        private static string RandomString(int size)\n        {\n            System.Text.StringBuilder builder = new System.Text.StringBuilder();\n            Random seed = new Random((int)DateTime.Now.Millisecond);\n            System.Threading.Thread.Sleep(1);\n            Random random = new Random(seed.Next(0, 1000));\n            char ch;\n            for (int i = 0; i < size; i++)\n            {\n                ch = Convert.ToChar(Convert.ToInt32(Math.Floor(26 * random.NextDouble() + 65)));\n                builder.Append(ch);\n            }\n            return builder.ToString();\n        }\n    }\n",
      "lang":"CSharp",
      "filename":"PersonClass.snippet",
      "keywords":[
         "Create",
         "a",
         "test",
         "class",
         "Person",
         "Test",
         "Class",
         "CSharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Pick a contact from the ContactPicker UI",
      "title":"Pick Contact",
      "code":"var contactPicker = new Windows.ApplicationModel.Contacts.ContactPicker();\ncontactPicker.CommitButtonText = \"Select\";\ncontactPicker.pickSingleContactAsync().then(function(contact)\n{\n});",
      "lang":"JavaScript",
      "filename":"PickContact.snippet",
      "keywords":[
         "Pick",
         "a",
         "contact",
         "from",
         "the",
         "ContactPicker",
         "UI",
         "Contact",
         "JavaScript"
      ]
   },
   {
      "author":"Microsoft Corporation",
      "desc":"Code snippet for an attached property using DependencyProperty as the backing store",
      "title":"Define an attached DependencyProperty",
      "code":"\n                \npublic static $type$ Get$property$(DependencyObject obj)\n{\n    return ($type$)obj.GetValue($property$Property);\n}\n\npublic static void Set$property$(DependencyObject obj, $type$ value)\n{\n    obj.SetValue($property$Property, value);\n}\n\n// Using a DependencyProperty as the backing store for $property$.  This enables animation, styling, binding, etc...\npublic static readonly DependencyProperty $property$Property =\n    DependencyProperty.RegisterAttached(\"$property$\", typeof($type$), typeof($ownerclass$), new UIPropertyMetadata($defaultvalue$));\n\n$end$",
      "lang":"csharp",
      "filename":"propa.snippet",
      "keywords":[
         "Code",
         "snippet",
         "for",
         "an",
         "attached",
         "property",
         "using",
         "DependencyProperty",
         "as",
         "the",
         "backing",
         "store",
         "Define",
         "csharp"
      ]
   },
   {
      "author":"Microsoft Corporation",
      "desc":"Code snippet for a property using DependencyProperty as the backing store",
      "title":"Define a DependencyProperty",
      "code":"\n\npublic $type$ $property$\n{\n    get { return ($type$)GetValue($property$Property); }\n    set { SetValue($property$Property, value); }\n}\n\n// Using a DependencyProperty as the backing store for $property$.  This enables animation, styling, binding, etc...\npublic static readonly DependencyProperty $property$Property = \n    DependencyProperty.Register(\"$property$\", typeof($type$), typeof($ownerclass$), new UIPropertyMetadata($defaultvalue$));\n\n$end$",
      "lang":"csharp",
      "filename":"propdp.snippet",
      "keywords":[
         "Code",
         "snippet",
         "for",
         "a",
         "property",
         "using",
         "DependencyProperty",
         "as",
         "the",
         "backing",
         "store",
         "Define",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current AccelerometerReading from Accelerometer",
      "title":"Read Accelerometer Values",
      "code":"var accelerometer = Windows.Devices.Sensors.Accelerometer.getDefault();\nif(accelerometer != null)\n{\n\tvar reading = accelerometer.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadAccelerometer.snippet",
      "keywords":[
         "Read",
         "current",
         "AccelerometerReading",
         "from",
         "Accelerometer",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read a bitmap from the clipboard",
      "title":"Get Bitmap from clipboard",
      "code":"var dataPackage = new Windows.ApplicationModel.DataTransfer.Clipboard.getContent();\n\nif (dataPackage.contains(Windows.ApplicationModel.DataTransfer.StandardDataFormats.bitmap)) {\n\n    dataPackage.getBitmapAsync().then(function (streamRef) {\n        streamRef.openReadAsync().then(function (bitmapStream) {\n            var image = MSApp.createBlobFromRandomAccessStream(bitmapStream.contentType, bitmapStream);\n        });\n    });\n}",
      "lang":"JavaScript",
      "filename":"ReadBitmap.snippet",
      "keywords":[
         "Read",
         "a",
         "bitmap",
         "from",
         "the",
         "clipboard",
         "Get",
         "Bitmap",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current CompassReading from Compass",
      "title":"Read Compass Values",
      "code":"var compass = Windows.Devices.Sensors.Compass.getDefault();\nif(compass != null)\n{\n\tvar reading = compass.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadCompass.snippet",
      "keywords":[
         "Read",
         "current",
         "CompassReading",
         "from",
         "Compass",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current GyrometerReading from Gyrometer",
      "title":"Read Gyrometer Values",
      "code":"var gyrometer = Windows.Devices.Sensors.Gyrometer.getDefault();\nif(gyrometer != null)\n{\n\tvar reading = gyrometer.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadGyrometer.snippet",
      "keywords":[
         "Read",
         "current",
         "GyrometerReading",
         "from",
         "Gyrometer",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get an Html snippet from the clipboard",
      "title":"Get HTML From clipboard",
      "code":"var dataPackage = new Windows.ApplicationModel.DataTransfer.Clipboard.getContent();\nif (dataPackage.contains(Windows.ApplicationModel.DataTransfer.StandardDataFormats.html)) {\n\n    dataPackage.getHtmlFormatAsync().then(function (html) {\n\n    });\n}",
      "lang":"JavaScript",
      "filename":"ReadHtml.snippet",
      "keywords":[
         "Get",
         "an",
         "Html",
         "snippet",
         "from",
         "the",
         "clipboard",
         "HTML",
         "From",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current InclinometerReading from Inclinometer",
      "title":"Read Inclinometer Values",
      "code":"var inclinometer = Windows.Devices.Sensors.Inclinometer.getDefault();\nif(inclinometer != null)\n{\n\tvar reading = inclinometer.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadInclinometer.snippet",
      "keywords":[
         "Read",
         "current",
         "InclinometerReading",
         "from",
         "Inclinometer",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current LightSensorReading from LightSensor",
      "title":"Read LightSensor Values",
      "code":"var lightSensor = Windows.Devices.Sensors.LightSensor.getDefault();\nif(lightSensor != null)\n{\n\tvar reading = lightSensor.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadLightSensor.snippet",
      "keywords":[
         "Read",
         "current",
         "LightSensorReading",
         "from",
         "LightSensor",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read current OrientationSensorReading from OrientationSensor",
      "title":"Read OrientationSensor Values",
      "code":"var orientationSensor = Windows.Devices.Sensors.OrientationSensor.getDefault();\nif(orientationSensor != null)\n{\n\tvar reading = orientationSensor.getCurrentReading();\n}",
      "lang":"JavaScript",
      "filename":"ReadOrientationSensor.snippet",
      "keywords":[
         "Read",
         "current",
         "OrientationSensorReading",
         "from",
         "OrientationSensor",
         "Values",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Open and read from a file in the roaming settings",
      "title":"Read a file in settings",
      "code":"var roamingFolder = Windows.Storage.ApplicationData.current.roamingFolder;\nroamingFolder.createFileAsync(\"$filename$\", Windows.Storage.CreationCollisionOption.openIfExists).then(function (file) {\n\tWindows.Storage.FileIO.readTextAsync(file).then(function (text) {\n\n\t});\n});",
      "lang":"JavaScript",
      "filename":"ReadRoamingFile.snippet",
      "keywords":[
         "Open",
         "and",
         "read",
         "from",
         "a",
         "file",
         "in",
         "the",
         "roaming",
         "settings",
         "Read",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get an RTF snippet from the clipboard.",
      "title":"Get RTF From clipboard",
      "code":"var dataPackage = new Windows.ApplicationModel.DataTransfer.Clipboard.getContent();\nif (dataPackage.contains(Windows.ApplicationModel.DataTransfer.StandardDataFormats.rtf)) {\n\n    dataPackage.getRtfAsync().then(function (rtf) {\n\n    });\n}",
      "lang":"JavaScript",
      "filename":"ReadRtf.snippet",
      "keywords":[
         "Get",
         "an",
         "RTF",
         "snippet",
         "from",
         "the",
         "clipboard.",
         "From",
         "clipboard",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get text from the clipboard.",
      "title":"Get Text From clipboard",
      "code":"var dataPackage = new Windows.ApplicationModel.DataTransfer.Clipboard.getContent();\nif (dataPackage.contains(Windows.ApplicationModel.DataTransfer.StandardDataFormats.text)) {\n\n    dataPackage.getTextAsync().then(function (text) {\n\n    });\n}",
      "lang":"JavaScript",
      "filename":"ReadText.snippet",
      "keywords":[
         "Get",
         "text",
         "from",
         "the",
         "clipboard.",
         "Text",
         "From",
         "clipboard",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get an Uri from the clipboard.",
      "title":"Get Uri From clipboard",
      "code":"var dataPackage = new Windows.ApplicationModel.DataTransfer.Clipboard.getContent();\nif (dataPackage.contains(Windows.ApplicationModel.DataTransfer.StandardDataFormats.uri)) {\n\n    dataPackage.getUriAsync().then(function (uri) {\n\n    });\n}",
      "lang":"JavaScript",
      "filename":"ReadUri.snippet",
      "keywords":[
         "Get",
         "an",
         "Uri",
         "from",
         "the",
         "clipboard.",
         "From",
         "clipboard",
         "JavaScript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Render HTML data directly on a screen",
      "title":"Render HTML data directly on a screen",
      "code":"// Render HTML data directly on a screen\nmyapp.$MyScreen$.MyCustomControl_render = function (element, contentItem) {\n    element.innerHTML = contentItem.stringValue;\n};",
      "lang":"javascript",
      "filename":"Render%20HTML%20data%20directly%20on%20a%20screen.snippet",
      "keywords":[
         "Render",
         "HTML",
         "data",
         "directly",
         "on",
         "a",
         "screen",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Respond to changes in roaming settings.",
      "title":"Refresh RoamingSettings",
      "code":"Windows.Storage.ApplicationData.current.addEventListener(\"datachanged\", function(eventArgs){\n});",
      "lang":"JavaScript",
      "filename":"RoamingChanged.snippet",
      "keywords":[
         "Respond",
         "to",
         "changes",
         "in",
         "roaming",
         "settings.",
         "Refresh",
         "RoamingSettings",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add a setting to the local settings.",
      "title":"Work with LocalSettings",
      "code":"var localSettings = Windows.Storage.ApplicationData.current.localSettings;\nlocalSettings.values[\"$SettingName$\"] = $SettingValue$;",
      "lang":"JavaScript",
      "filename":"SaveLocalSetting.snippet",
      "keywords":[
         "Add",
         "a",
         "setting",
         "to",
         "the",
         "local",
         "settings.",
         "Work",
         "with",
         "LocalSettings",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Create a file and write to it in roaming settings.",
      "title":"Write a file in settings",
      "code":"var roamingFolder = Windows.Storage.ApplicationData.current.roamingFolder;\nroamingFolder.createFileAsync(\"$filename$\", Windows.Storage.CreationCollisionOption.openIfExists).then(function (file) {\n\tWindows.Storage.FileIO.writeTextAsync(file, \"$Data$\").then(function () {\n\t});\n});",
      "lang":"JavaScript",
      "filename":"SaveRoamingFile.snippet",
      "keywords":[
         "Create",
         "a",
         "file",
         "and",
         "write",
         "to",
         "it",
         "in",
         "roaming",
         "settings.",
         "Write",
         "settings",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Add a setting to roaming settings.",
      "title":"Work with Roaming Settings",
      "code":"var roamingSettings = Windows.Storage.ApplicationData.current.roamingSettings;\nroamingSettings.values[\"$SettingName$\"] = $SettingValue$;",
      "lang":"JavaScript",
      "filename":"SaveRoamingSetting.snippet",
      "keywords":[
         "Add",
         "a",
         "setting",
         "to",
         "roaming",
         "settings.",
         "Work",
         "with",
         "Roaming",
         "Settings",
         "JavaScript"
      ]
   },
   {
      "author":"progalex@hotmail.com",
      "desc":null,
      "title":"Set default value on a data entry screen",
      "code":"// Set a default value on a data entry screen\nmyapp.$EntityName$.created = function (entity) {\n    entity.OrderDate = new Date();\n    entity.OrderStatus = 'New';\n};",
      "lang":"javascript",
      "filename":"Set%20a%20default%20value%20on%20a%20data%20entry%20screen.snippet",
      "keywords":[
         "Set",
         "default",
         "value",
         "on",
         "a",
         "data",
         "entry",
         "screen",
         "javascript"
      ]
   },
   {
      "author":"Will Rocks",
      "desc":"Set the screen title dynamically",
      "title":"Set the screen title dynamically",
      "code":"// Set the screen title dynamically\nmyapp.$MyScreen$.created = function (screen) {\n\n    var name;\n\n    name = screen.$Customer$.$CompanyName$;\n    screen.details.displayName = \"Information about: \" + name;\n};",
      "lang":"javascript",
      "filename":"Set%20the%20screen%20title%20dynamically.snippet",
      "keywords":[
         "Set",
         "the",
         "screen",
         "title",
         "dynamically",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Show a numeric keyboard on a device",
      "title":"Show a numeric keyboard on a device",
      "code":"// Show a numeric keyboard on a device\nmyapp.$MyScreen$.NumericField_postRender = function (element, contentItem) {\n    $$(element).find(\"input\").get(0).type = \"number\";\n};",
      "lang":"javascript",
      "filename":"Show%20a%20numeric%20keyboard%20on%20a%20device.snippet",
      "keywords":[
         "Show",
         "a",
         "numeric",
         "keyboard",
         "on",
         "device",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Show a message box and respond to user selection",
      "title":"Show message box and respond to user selection",
      "code":"// Show a message box, and respond to a user selection\nmyapp.$MyScreen$.MyMethod_execute = function (screen) {\n    msls.showMessageBox(\"Please choose the appropriate button\", {\n\n        title: \"This is a message box\",\n\n        buttons: msls.MessageBoxButtons.yesNoCancel\n\n    }).then(function (result) {\n\n        if (result === msls.MessageBoxResult.yes) {\n\n            alert(\"Yes button was chosen\");\n\n        }\n\n        else if (result === msls.MessageBoxResult.no) {\n\n            alert(\"No button was chosen\");\n\n        }\n\n        else if (result === msls.MessageBoxResult.cancel) {\n\n            alert(\"Please choose either Yes or No\");\n\n        }\n\n    });\n};",
      "lang":"javascript",
      "filename":"Show%20message%20box%20and%20respond%20to%20user%20selection.snippet",
      "keywords":[
         "Show",
         "a",
         "message",
         "box",
         "and",
         "respond",
         "to",
         "user",
         "selection",
         "javascript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Show the settings pane",
      "title":"Show Settings Pane",
      "code":"Windows.UI.ApplicationSettings.SettingsPane.show();",
      "lang":"JavaScript",
      "filename":"ShowSettingsPane.snippet",
      "keywords":[
         "Show",
         "the",
         "settings",
         "pane",
         "Settings",
         "Pane",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Get all SMS messages on a device",
      "title":"Get All SMS Messages",
      "code":"Windows.Devices.Sms.SmsDevice.getDefaultAsync().then(function (device) {\n    device.MessageStore.getMessagesAsync(Windows.Devices.Sms.SmsMessageFilter.all).then(function (messages) {\n    });\n});",
      "lang":"JavaScript",
      "filename":"SMSGetAll.snippet",
      "keywords":[
         "Get",
         "all",
         "SMS",
         "messages",
         "on",
         "a",
         "device",
         "All",
         "Messages",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Read an SMS",
      "title":"Read SMS",
      "code":"Windows.Devices.Sms.SmsDevice.getDefaultAsync().then(function (device) {\n\tdevice.MessageStore.getMessageAsync($id$).then(function (message) {\n\t\tvar textMessage = message.FromBinaryMessage(message);\n\t});\n});",
      "lang":"JavaScript",
      "filename":"SMSRead.snippet",
      "keywords":[
         "Read",
         "an",
         "SMS",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Send an SMS",
      "title":"Send SMS",
      "code":"Windows.Devices.Sms.SmsDevice.getDefaultAsync().then(function (device) {\n\tvar msg = new Windows.Devices.Sms.SmsTextMessage();\n\tmsg.To = \"$to$\";\n\tmsg.Body = \"$body$\";\n\tdevice.sendMessageAsync(msg).done(function () {\n\t});\n});",
      "lang":"JavaScript",
      "filename":"SMSSend.snippet",
      "keywords":[
         "Send",
         "an",
         "SMS",
         "JavaScript"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Task.WhenAll",
      "title":"Task.WhenAll",
      "code":"$type$[] result = await System.Threading.Tasks.Task.WhenAll($tasks$);",
      "lang":"csharp",
      "filename":"TaskWhenAll.snippet",
      "keywords":[
         "Task.WhenAll",
         "csharp"
      ]
   },
   {
      "author":"Coding4Fun",
      "desc":"Task.WhenAny",
      "title":"Task.WhenAny",
      "code":"System.Threading.Tasks.Task t = await System.Threading.Tasks.Task.WhenAny($tasks$);",
      "lang":"csharp",
      "filename":"TaskWhenAny.snippet",
      "keywords":[
         "Task.WhenAny",
         "csharp"
      ]
   },
   {
      "author":"Alex Fidanov",
      "desc":"Create a test class with different data types",
      "title":"Test Class Types",
      "code":"public class TestTypes : global::System.ComponentModel.INotifyPropertyChanged\n    {\n        #region String (INotifyPropertyChanged Property)\n        private string _string;\n\n        public string String\n        {\n            get { return _string; }\n            set\n            {\n                _string = value;\n                RaisePropertyChanged(\"String\");\n            }\n        }\n        #endregion\n        #region Integer (INotifyPropertyChanged Property)\n        private int _integer;\n\n        public int Integer\n        {\n            get { return _integer; }\n            set\n            {\n                _integer = value;\n                RaisePropertyChanged(\"Integer\");\n            }\n        }\n        #endregion\n        #region Double (INotifyPropertyChanged Property)\n        private double _double;\n\n        public double Double\n        {\n            get { return _double; }\n            set\n            {\n                _double = value;\n                RaisePropertyChanged(\"Double\");\n            }\n        }\n        #endregion\n        #region Decimal (INotifyPropertyChanged Property)\n        private decimal _decimal;\n\n        public decimal Decimal\n        {\n            get { return _decimal; }\n            set\n            {\n                _decimal = value;\n                RaisePropertyChanged(\"Decimal\");\n            }\n        }\n        #endregion\n        #region Boolean (INotifyPropertyChanged Property)\n        private bool _boolean;\n\n        public bool Boolean\n        {\n            get { return _boolean; }\n            set\n            {\n                _boolean = value;\n                RaisePropertyChanged(\"Boolean\");\n            }\n        }\n        #endregion\n        #region DateTime (INotifyPropertyChanged Property)\n        private DateTime _dateTime;\n\n        public DateTime DateTime\n        {\n            get { return _dateTime; }\n            set\n            {\n                _dateTime = value;\n                RaisePropertyChanged(\"DateTime\");\n            }\n        }\n        #endregion\n        #region Tag (INotifyPropertyChanged Property)\n        private object _tag;\n\n        public object Tag\n        {\n            get { return _tag; }\n            set\n            {\n                _tag = value;\n                RaisePropertyChanged(\"Tag\");\n            }\n        }\n        #endregion\n\n        public TestTypes()\n        {\n            this.String = \"\";\n            this.Integer = 0;\n            this.Double = 0;\n            this.Decimal = 0;\n            this.DateTime = DateTime.Now;\n            this.Boolean = false;\n        }\n        public TestTypes(int seed)\n        {\n            Random random = new Random(seed);\n            this.String = RandomString(random.Next(5, 10));\n            this.Integer = random.Next();\n            this.Double = random.NextDouble();\n            this.Decimal = seed;\n            this.DateTime = DateTime.Now.AddDays(seed);\n            this.Boolean = seed % 2 == 0;\n        }\n\n        public static global::System.Collections.ObjectModel.ObservableCollection<TestTypes> GetTypes(int number)\n        {\n            global::System.Collections.ObjectModel.ObservableCollection<TestTypes> source = new global::System.Collections.ObjectModel.ObservableCollection<TestTypes>();\n\n            for (int i = 0; i < number; i++)\n            {\n                source.Add(new TestTypes(i));\n            }\n            return source;\n        }\n\n        #region INotifyPropertyChanged values\n\n        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;\n\n        protected void RaisePropertyChanged(string propertyName)\n        {\n            var handler = PropertyChanged;\n            if (handler != null)\n            {\n                handler(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));\n            }\n        }\n        #endregion\n\n        private static string RandomString(int size)\n        {\n            System.Text.StringBuilder builder = new System.Text.StringBuilder();\n            Random seed = new Random((int)DateTime.Now.Millisecond);\n            System.Threading.Thread.Sleep(1);\n            Random random = new Random(seed.Next(0, 1000));\n            char ch;\n            for (int i = 0; i < size; i++)\n            {\n                ch = Convert.ToChar(Convert.ToInt32(Math.Floor(26 * random.NextDouble() + 65)));\n                builder.Append(ch);\n            }\n            return builder.ToString();\n        }\n    }",
      "lang":"CSharp",
      "filename":"TestTypes.snippet",
      "keywords":[
         "Create",
         "a",
         "test",
         "class",
         "with",
         "different",
         "data",
         "types",
         "Test",
         "Class",
         "Types",
         "CSharp"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Use a JQuery Mobile Control",
      "title":"Use a JQuery Mobile Control",
      "code":"// Use a JQuery Mobile control\nmyapp.$MyScreen$.MyCustomControl_render = function (element, contentItem) {\n    createSlider(element, contentItem, 0, 100);\n};\n\nfunction createSlider(element, contentItem, min, max) {\n    // Generate the input element.\n    $$(element).append('<input type=\"range\" min=\"' + min +\n        '\" max=\"' + max + '\" value=\"' + contentItem.value + '\" />');\n};",
      "lang":"javascript",
      "filename":"Use%20a%20JQuery%20Mobile%20Control.snippet",
      "keywords":[
         "Use",
         "a",
         "JQuery",
         "Mobile",
         "Control",
         "javascript"
      ]
   },
   {
      "author":"LightSwitch Team",
      "desc":"Validate data on a screen",
      "title":"Validate data on a screen",
      "code":"// Validate data on a screen\nmyapp.$MyScreen$.beforeApplyChanges = function (screen) {\n    if (screen.$Contact$R.$ContactName$.indexOf('!') != -1) {\n\n        screen.findContentItem(\"$ContactName$\").validationResults = [\n\n        new msls.ValidationResult(\n\n        screen.$Contact$.details.properties.contactName,\n\n        \"$Contact$ Name cannot contain the character '!'.\")\n\n        ];\n\n        return false;\n\n    }\n};",
      "lang":"javascript",
      "filename":"Validate%20data%20on%20a%20screen.snippet",
      "keywords":[
         "Validate",
         "data",
         "on",
         "a",
         "screen",
         "javascript"
      ]
   }
]
